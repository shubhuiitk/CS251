%!PS-Adobe-2.0 EPSF-2.0
%%Title: scatter5.eps
%%Creator: gnuplot 5.0 patchlevel 7
%%CreationDate: Wed Mar 28 20:19:08 2018
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 7.500 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (scatter5.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 7)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Mar 28 20:19:08 2018)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1340 640 M
63 0 V
5436 0 R
-63 0 V
stroke
1220 640 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 10)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1340 953 M
31 0 V
5468 0 R
-31 0 V
1340 1136 M
31 0 V
5468 0 R
-31 0 V
1340 1266 M
31 0 V
5468 0 R
-31 0 V
1340 1367 M
31 0 V
5468 0 R
-31 0 V
-5468 82 R
31 0 V
5468 0 R
-31 0 V
-5468 70 R
31 0 V
5468 0 R
-31 0 V
-5468 60 R
31 0 V
5468 0 R
-31 0 V
-5468 53 R
31 0 V
5468 0 R
-31 0 V
-5468 48 R
63 0 V
5436 0 R
-63 0 V
stroke
1220 1680 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1340 1993 M
31 0 V
5468 0 R
-31 0 V
1340 2176 M
31 0 V
5468 0 R
-31 0 V
1340 2306 M
31 0 V
5468 0 R
-31 0 V
1340 2407 M
31 0 V
5468 0 R
-31 0 V
-5468 82 R
31 0 V
5468 0 R
-31 0 V
-5468 69 R
31 0 V
5468 0 R
-31 0 V
-5468 61 R
31 0 V
5468 0 R
-31 0 V
-5468 53 R
31 0 V
5468 0 R
-31 0 V
-5468 48 R
63 0 V
5436 0 R
-63 0 V
stroke
1220 2720 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1340 3032 M
31 0 V
5468 0 R
-31 0 V
1340 3216 M
31 0 V
5468 0 R
-31 0 V
1340 3345 M
31 0 V
5468 0 R
-31 0 V
1340 3446 M
31 0 V
5468 0 R
-31 0 V
-5468 83 R
31 0 V
5468 0 R
-31 0 V
-5468 69 R
31 0 V
5468 0 R
-31 0 V
-5468 60 R
31 0 V
5468 0 R
-31 0 V
-5468 54 R
31 0 V
5468 0 R
-31 0 V
-5468 47 R
63 0 V
5436 0 R
-63 0 V
stroke
1220 3759 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 10000)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1340 4072 M
31 0 V
5468 0 R
-31 0 V
1340 4255 M
31 0 V
5468 0 R
-31 0 V
1340 4385 M
31 0 V
5468 0 R
-31 0 V
1340 4486 M
31 0 V
5468 0 R
-31 0 V
-5468 82 R
31 0 V
5468 0 R
-31 0 V
-5468 70 R
31 0 V
5468 0 R
-31 0 V
-5468 60 R
31 0 V
5468 0 R
-31 0 V
-5468 53 R
31 0 V
5468 0 R
-31 0 V
-5468 48 R
63 0 V
5436 0 R
-63 0 V
stroke
1220 4799 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100000)]
] -33.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1340 640 M
0 63 V
0 4096 R
0 -63 V
stroke
1340 440 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 10)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1616 640 M
0 31 V
0 4128 R
0 -31 V
1981 640 M
0 31 V
0 4128 R
0 -31 V
2168 640 M
0 31 V
0 4128 R
0 -31 V
2257 640 M
0 63 V
0 4096 R
0 -63 V
stroke
2257 440 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2532 640 M
0 31 V
0 4128 R
0 -31 V
2897 640 M
0 31 V
0 4128 R
0 -31 V
3084 640 M
0 31 V
0 4128 R
0 -31 V
3173 640 M
0 63 V
0 4096 R
0 -63 V
stroke
3173 440 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1000)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3449 640 M
0 31 V
0 4128 R
0 -31 V
3814 640 M
0 31 V
0 4128 R
0 -31 V
4001 640 M
0 31 V
0 4128 R
0 -31 V
4090 640 M
0 63 V
0 4096 R
0 -63 V
stroke
4090 440 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 10000)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4365 640 M
0 31 V
0 4128 R
0 -31 V
4730 640 M
0 31 V
0 4128 R
0 -31 V
4917 640 M
0 31 V
0 4128 R
0 -31 V
5006 640 M
0 63 V
0 4096 R
0 -63 V
stroke
5006 440 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 100000)]
] -33.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5282 640 M
0 31 V
0 4128 R
0 -31 V
5647 640 M
0 31 V
0 4128 R
0 -31 V
5834 640 M
0 31 V
0 4128 R
0 -31 V
5923 640 M
0 63 V
0 4096 R
0 -63 V
stroke
5923 440 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1x10)]
[(Helvetica) 80.0 50.0 true true 0 (6)]
] -43.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6198 640 M
0 31 V
0 4128 R
0 -31 V
6563 640 M
0 31 V
0 4128 R
0 -31 V
6750 640 M
0 31 V
0 4128 R
0 -31 V
6839 640 M
0 63 V
0 4096 R
0 -63 V
stroke
6839 440 M
[ [(Helvetica) 100.0 0.0 true true 0 ( 1x10)]
[(Helvetica) 80.0 50.0 true true 0 (7)]
] -43.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1340 4799 N
0 -4159 V
5499 0 V
0 4159 V
-5499 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
160 2719 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 100.0 0.0 true true 0 (Time taken)]
] -33.3 MCshow
grestore
LTb
LCb setrgbcolor
4089 140 M
[ [(Helvetica) 100.0 0.0 true true 0 (Number of elements)]
] -33.3 MCshow
LTb
% Begin plot #1
1.500 UP
1.000 UL
LTb
LCb setrgbcolor
3173 2231 Pls
3173 2151 Pls
3173 2156 Pls
3173 2132 Pls
3173 2165 Pls
3173 2247 Pls
3173 2208 Pls
3173 2137 Pls
3173 2111 Pls
3173 2135 Pls
3173 2168 Pls
3173 2164 Pls
3173 2191 Pls
3173 2115 Pls
3173 2242 Pls
3173 2191 Pls
3173 2101 Pls
3173 2120 Pls
3173 2154 Pls
3173 2153 Pls
3173 2245 Pls
3173 2168 Pls
3173 2127 Pls
3173 2213 Pls
3173 2189 Pls
3173 2183 Pls
3173 2777 Pls
3173 2376 Pls
3173 2180 Pls
3173 2173 Pls
3173 2162 Pls
3173 2191 Pls
3173 2189 Pls
3173 2145 Pls
3173 2198 Pls
3173 2149 Pls
3173 2186 Pls
3173 2283 Pls
3173 2223 Pls
3173 2111 Pls
3173 2301 Pls
3173 2493 Pls
3173 2509 Pls
3173 2262 Pls
3173 2179 Pls
3173 2419 Pls
3173 2170 Pls
3173 2173 Pls
3173 2173 Pls
3173 2149 Pls
3173 2146 Pls
3173 2234 Pls
3173 2218 Pls
3173 2224 Pls
3173 2695 Pls
3173 2280 Pls
3173 2191 Pls
3173 2173 Pls
3173 2154 Pls
3173 2198 Pls
3173 2099 Pls
3173 2120 Pls
3173 2143 Pls
3173 2141 Pls
3173 2194 Pls
3173 2249 Pls
3173 2545 Pls
3173 2305 Pls
3173 2277 Pls
3173 2143 Pls
3173 2123 Pls
3173 2177 Pls
3173 2174 Pls
3173 2235 Pls
3173 2199 Pls
3173 2151 Pls
3173 2143 Pls
3173 2627 Pls
3173 2188 Pls
3173 2185 Pls
3173 2149 Pls
3173 2111 Pls
3173 2168 Pls
3173 2138 Pls
3173 2205 Pls
3173 2130 Pls
3173 2088 Pls
3173 2206 Pls
3173 2164 Pls
3173 2130 Pls
3173 2230 Pls
3173 2189 Pls
3173 2176 Pls
3173 2185 Pls
3173 2138 Pls
3173 2088 Pls
3173 2168 Pls
3173 2245 Pls
3173 2195 Pls
3173 2189 Pls
4365 2326 Pls
4365 2355 Pls
4365 2421 Pls
4365 2481 Pls
4365 2512 Pls
4365 2316 Pls
4365 2374 Pls
4365 2337 Pls
4365 2372 Pls
4365 2392 Pls
4365 2358 Pls
4365 2377 Pls
4365 2654 Pls
4365 2383 Pls
4365 2361 Pls
4365 2379 Pls
4365 2311 Pls
4365 2422 Pls
4365 2315 Pls
4365 2347 Pls
4365 2342 Pls
4365 2299 Pls
4365 2288 Pls
4365 2389 Pls
4365 2272 Pls
4365 2380 Pls
4365 2335 Pls
4365 2359 Pls
4365 2376 Pls
4365 2426 Pls
4365 2360 Pls
4365 2295 Pls
4365 2409 Pls
4365 2303 Pls
4365 2345 Pls
4365 2365 Pls
4365 2356 Pls
4365 2462 Pls
4365 2432 Pls
4365 2314 Pls
4365 2391 Pls
4365 2292 Pls
4365 2418 Pls
4365 2336 Pls
4365 2297 Pls
4365 2367 Pls
4365 2286 Pls
4365 2373 Pls
4365 2322 Pls
4365 2363 Pls
4365 2320 Pls
4365 2279 Pls
4365 2390 Pls
4365 2357 Pls
4365 2358 Pls
4365 2371 Pls
4365 3057 Pls
4365 2573 Pls
4365 2576 Pls
4365 2378 Pls
4365 2326 Pls
4365 2317 Pls
4365 2350 Pls
4365 2347 Pls
4365 2354 Pls
4365 2314 Pls
4365 2394 Pls
4365 2305 Pls
4365 2391 Pls
4365 2308 Pls
4365 2434 Pls
4365 2279 Pls
4365 2350 Pls
4365 2365 Pls
4365 2330 Pls
4365 2357 Pls
4365 2363 Pls
4365 2319 Pls
4365 2437 Pls
4365 2453 Pls
4365 2360 Pls
4365 2340 Pls
4365 2435 Pls
4365 2345 Pls
4365 2355 Pls
4365 2387 Pls
4365 2305 Pls
4365 2386 Pls
4365 2334 Pls
4365 2379 Pls
4365 2315 Pls
4365 2310 Pls
4365 2389 Pls
4365 2306 Pls
4365 2394 Pls
4365 2554 Pls
4365 2339 Pls
4365 2385 Pls
4365 2378 Pls
4365 2298 Pls
5006 3114 Pls
5006 3198 Pls
5006 3104 Pls
5006 3118 Pls
5006 3143 Pls
5006 3277 Pls
5006 3161 Pls
5006 3234 Pls
5006 3162 Pls
5006 3139 Pls
5006 3195 Pls
5006 3178 Pls
5006 3180 Pls
5006 3058 Pls
5006 3086 Pls
5006 3233 Pls
5006 3083 Pls
5006 3158 Pls
5006 3177 Pls
5006 3226 Pls
5006 3199 Pls
5006 3103 Pls
5006 3167 Pls
5006 3161 Pls
5006 3160 Pls
5006 3143 Pls
5006 3176 Pls
5006 3145 Pls
5006 3156 Pls
5006 3202 Pls
5006 3088 Pls
5006 3068 Pls
5006 3143 Pls
5006 3222 Pls
5006 3167 Pls
5006 3324 Pls
5006 3154 Pls
5006 3063 Pls
5006 3248 Pls
5006 3102 Pls
5006 3138 Pls
5006 3311 Pls
5006 3184 Pls
5006 3150 Pls
5006 3192 Pls
5006 3206 Pls
5006 3247 Pls
5006 3127 Pls
5006 3073 Pls
5006 3174 Pls
5006 3166 Pls
5006 3211 Pls
5006 3125 Pls
5006 3219 Pls
5006 3026 Pls
5006 3144 Pls
5006 3158 Pls
5006 3063 Pls
5006 3178 Pls
5006 3099 Pls
5006 3241 Pls
5006 3131 Pls
5006 3140 Pls
5006 3308 Pls
5006 3118 Pls
5006 3282 Pls
5006 3148 Pls
5006 3145 Pls
5006 3093 Pls
5006 3038 Pls
5006 3163 Pls
5006 3105 Pls
5006 3140 Pls
5006 3247 Pls
5006 3219 Pls
5006 3181 Pls
5006 3165 Pls
5006 3064 Pls
5006 3090 Pls
5006 3101 Pls
5006 3182 Pls
5006 3249 Pls
5006 3187 Pls
5006 3136 Pls
5006 3190 Pls
5006 3278 Pls
5006 3160 Pls
5006 3254 Pls
5006 3156 Pls
5006 3170 Pls
5006 3232 Pls
5006 3206 Pls
5006 3141 Pls
5006 3140 Pls
5006 3163 Pls
5006 3107 Pls
5006 3111 Pls
5006 3117 Pls
5006 3216 Pls
5006 3213 Pls
5922 3972 Pls
5922 4157 Pls
5922 3977 Pls
5922 4072 Pls
5922 4069 Pls
5922 3973 Pls
5922 4004 Pls
5922 4031 Pls
5922 4067 Pls
5922 4068 Pls
5922 4028 Pls
5922 4067 Pls
5922 4069 Pls
5922 3974 Pls
5922 3976 Pls
5922 4069 Pls
5922 3994 Pls
5922 4031 Pls
5922 3977 Pls
5922 4122 Pls
5922 4007 Pls
5922 4070 Pls
5922 4068 Pls
5922 4070 Pls
5922 4007 Pls
5922 3978 Pls
5922 3974 Pls
5922 4155 Pls
5922 4067 Pls
5922 4068 Pls
5922 4067 Pls
5922 4073 Pls
5922 3975 Pls
5922 3973 Pls
5922 4069 Pls
5922 4028 Pls
5922 4016 Pls
5922 4023 Pls
5922 3975 Pls
5922 4074 Pls
5922 4068 Pls
5922 4062 Pls
5922 4069 Pls
5922 4072 Pls
5922 4029 Pls
5922 4069 Pls
5922 4067 Pls
5922 4076 Pls
5922 3976 Pls
5922 4017 Pls
5922 4071 Pls
5922 4058 Pls
5922 3973 Pls
5922 4078 Pls
5922 4070 Pls
5922 4071 Pls
5922 4074 Pls
5922 3984 Pls
5922 4069 Pls
5922 4140 Pls
5922 4042 Pls
5922 4024 Pls
5922 4068 Pls
5922 4069 Pls
5922 4070 Pls
5922 4070 Pls
5922 3976 Pls
5922 4070 Pls
5922 4030 Pls
5922 3974 Pls
5922 4070 Pls
5922 4029 Pls
5922 3997 Pls
5922 3973 Pls
5922 4070 Pls
5922 4055 Pls
5922 3993 Pls
5922 4070 Pls
5922 4067 Pls
5922 4081 Pls
5922 4070 Pls
5922 4035 Pls
5922 4074 Pls
5922 4054 Pls
5922 4032 Pls
5922 4024 Pls
5922 4070 Pls
5922 4069 Pls
5922 4100 Pls
5922 3975 Pls
5922 4044 Pls
5922 4070 Pls
5922 3974 Pls
5922 4069 Pls
5922 4039 Pls
5922 4066 Pls
5922 4067 Pls
5922 4071 Pls
5922 4068 Pls
5922 4056 Pls
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1340 4799 N
0 -4159 V
5499 0 V
0 4159 V
-5499 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
